USE AdventureWorks2017--1. proizvodi koji pripadaju kategoriji bikes, --imaju vise od 30 narudzbi i nemaju broj u imenu (AdventureWorks2017)SELECT P.NameFROM Production.Product AS P     INNER JOIN Production.ProductSubcategory AS PS 	 ON PS.ProductSubcategoryID=P.ProductSubcategoryID	 INNER JOIN Production.ProductCategory AS PC	 ON PC.ProductCategoryID=PS.ProductCategoryID	 INNER JOIN Sales.SalesOrderDetail AS SOD	 ON SOD.ProductID=P.ProductIDWHERE PC.Name LIKE '%Bikes%' AND P.Name NOT LIKE '%[0-9]%'GROUP BY P.NameHAVING COUNT(SOD.ProductID) > 30--2.	pokazati ime proizvode, koliko ga ima na stanju i koliko je puta prodat, -- i ukupna vrijedost proizvoda sa popustom.--Tamo gdje je kolicina na skladistu 0 staviti "proizvoda nema na skladistu",--tamo gdje je prodata kolicina 0 staviti "proizvod nije prodat"--tamo gdje je ukupna vrijdnost NULL staviti "stavka nije prodana"(AdventureWorks2017)SELECT P.Name,IIF(SUM(PPI.Quantity) =0, 'nepoznata vrijednost', CAST(SUM(PPI.Quantity) AS NVARCHAR)) AS 'Stanje na skladistu',IIF(COUNT(SOD.OrderQty)=0, 'proizvod nije prodat', CAST(COUNT(SOD.OrderQty) AS NVARCHAR)) 'Kolicina proizvoda',IIF(SUM(SOD.UnitPrice*SOD.OrderQty*(1-SOD.UnitPriceDiscount)) IS NULL ,'stavka nije prodana', CAST(SUM(SOD.UnitPrice*SOD.OrderQty*(1-SOD.UnitPriceDiscount)) AS NVARCHAR)) 'Ukupna vrijednost proizvoda sa popustom'FROM Production.Product AS P     INNER JOIN Production.ProductInventory AS PPI	 ON PPI.ProductID=P.ProductID	 LEFT OUTER JOIN Sales.SalesOrderDetail AS SOD	 ON SOD.ProductID=P.ProductIDGROUP BY P.Name,PPI.QuantityORDER BY 3 DESC--3.	prikazati prosjecnu vrijednost narudzbe po godinama za svaki teritorij zaokruzenu na dvije-- decimale,--uzeti u obzir onu narudzbu koja je placena kreditnom karticom , goidne u opadajucem-- teritoerije u rastucem (AdventureWorks2017)SELECT ST.Name, YEAR(SOH.OrderDate) 'Godina', ROUND(AVG(SOH.SubTotal),2) 'Prosjecna vrijednost narudzbe'FROM Sales.SalesOrderHeader AS SOH     INNER JOIN Sales.SalesTerritory AS ST	 ON ST.TerritoryID=SOH.TerritoryIDWHERE SOH.CreditCardID IS NOT NULLGROUP BY ST.Name,YEAR(SOH.OrderDate)ORDER BY 1 ASC, 2 DESC--4.	Prikazati narudzbu koja je najmanje dana bila na prodaji --i ako ima vise narudzbi sa istim vrijednostima, prikazati i njih (AdventureWorks2017)SELECT TOP 1 WITH TIES SOD.SalesOrderID, DATEDIFF(DAY,P.SellStartDate,P.SellEndDate)FROM Sales.SalesOrderDetail AS SOD     INNER JOIN Production.Product AS P	 ON P.ProductID=SOD.ProductIDWHERE P.SellEndDate IS NOT NULLORDER BY 2 ASCSELECT SOD.SalesOrderID 'Narudzba',       SUM(SOD.LineTotal) 'LineTotal',	   SUM(SOD.UnitPrice*SOD.OrderQty*(1-SOD.UnitPriceDiscount)) 'Cijena sa popustom',	   SUM(SOD.UnitPrice*SOD.OrderQty) 'Cijena bez popusta',	   SUM(SOH.TotalDue) 'Ukupna vrijednost naruzdbe sa svim',	   SUM(SOH.SubTotal) 'Ukupna vrijednost narudzbe bez svega'  FROM Sales.SalesOrderHeader AS SOH     INNER JOIN Sales.SalesOrderDetail AS SOD	 ON SOD.SalesOrderID=SOH.SalesOrderIDGROUP BY SOD.SalesOrderIDSELECT SOH.SalesOrderID, SUM(SOD.LineTotal), SOH.SubTotalFROM Sales.SalesOrderHeader AS SOHINNER JOIN Sales.SalesOrderDetail AS SOD	 ON SOD.SalesOrderID=SOH.SalesOrderIDGROUP BY SOH.SalesOrderID, SOH.SubTotal